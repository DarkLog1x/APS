{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/go-pass-yubikey-and-gpg","result":{"data":{"post":{"slug":"/go-pass-yubikey-and-gpg","title":"GoPass, Yubikey, and GPG","date":"02.01.2020","tags":[{"name":"GPG","slug":"gpg"},{"name":"Yubikey","slug":"yubikey"},{"name":"GoPass","slug":"go-pass"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"GoPass, Yubikey, and GPG\",\n  \"date\": \"2020-01-02T00:00:00.000Z\",\n  \"tags\": [\"GPG\", \"Yubikey\", \"GoPass\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TL:DR - Yubikey is an awesome little tool that streamlines GoPass on-top of all the other great things it does.\")), mdx(\"p\", null, \"I use GoPass to store my passwords. It's a great tool that I would recommend everyone use if you are familiar with cli. Side note, if you are not using any password manager you should stop reading and go set one up, it's 2019 there are a plethora of good ones to choose from (pass/gopass, lastpass\", \"[paid]\", \", and KeePassX) alongside many more.\"), mdx(\"p\", null, \"The one downside I always had with GoPass was that I would have to always type my GPG password to unencrypte my passwords every time I needed to use my password. This took time and depending on my coffee consumption several attempts to get it right. To solve this I decided to set my YubiKey up to hold my GPG sub keys and use it as a smartcard to then decrypt my passwords. \"), mdx(\"p\", null, \"The best guide that I have found on setting up my Yubkey with GPG is drduh's github guide at YubiKey-Guide. It is clean, concise and easy to follow. \"), mdx(\"p\", null, \"Once you have your GPG keys and subkeys created and then stored on your Yubkey it is as simple as running GoPass and typing in your Yubikey password. \"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"TL:DR - Yubikey is an awesome little tool that streamlines GoPass on-top of all the other great things it does. I use GoPass to store myâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/go-pass-yubikey-and-gpg"}}}